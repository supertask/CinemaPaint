name: Release

on:
  push:
    branches:
    - master
jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Semantic release
      id: semantic
      uses: cycjimmy/semantic-release-action@v2
      with:
        extra_plugins: |
          @semantic-release/changelog
          @semantic-release/git
        branch: master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create upm branch
      run: |
        git branch -d upm &> /dev/null || echo upm branch not found
        git subtree split -P "$PKG_ROOT" -b upm
        git checkout upm
        git checkout master README.md || echo README.md not found
        mkdir Documentation~
        git mv README.md Packages/jp.supertask.cinema-paint.post-processing/README.md
        git checkout master README.md || echo README.md not found
        git checkout master CHANGELOG.md || echo CHANGELOG.md not found
        git checkout master LICENSE || echo LICENSE not found
        mv -f LICENSE LICENSE.md || echo Can not rename LICENSE
        if [[ -d "Samples" ]]; then
          git mv Samples Samples~
          rm -f Samples.meta
          git config --global user.name 'github-bot'
          git config --global user.email 'github-bot@users.noreply.github.com'
          git commit -am "fix: Samples => Samples~"
        fi
        git push -f -u origin upm
      env:
        PKG_ROOT: Packages/jp.supertask.cinema-paint.post-processing

    - name: Create upm git tag
      if: steps.semantic.outputs.new_release_published == 'true'
      run: |
        git tag $TAG upm
        git push origin --tags
      env:
        TAG: upm/v${{ steps.semantic.outputs.new_release_version }}

    - name: Setup Node.js
      if: steps.semantic.outputs.new_release_published == 'true'
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Publish on npmjs
      if: steps.semantic.outputs.new_release_published == 'true'
      run: |
        npm install
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
